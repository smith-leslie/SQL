-- Film database project with multiple table analysis


/* 
1. My partner and I want to come by each of the stores in person and meet the managers. 
Please send over the managers’ names at each store, with the full address 
of each property (street address, district, city, and country please).  
*/ 

SELECT 
	  staff.first_name, 
    staff.last_name, 
    address.address,
    address.district, 
    city.city, 
    country.country
FROM store
	LEFT JOIN staff
		ON staff.store_id = store.store_id
	LEFT JOIN address
		ON address.address_id = staff.address_id
	LEFT JOIN city
		ON city.city_id = address.city_id
	LEFT JOIN country 
		ON country.country_id = city.country_id;

	
/*
2.	I would like to get a better understanding of all of the inventory that would come along with the business. 
Please pull together a list of each inventory item you have stocked, including the store_id number, 
the inventory_id, the name of the film, the film’s rating, its rental rate and replacement cost. 
*/

SELECT
	  inventory.store_id, 
    inventory.inventory_id, 
    film.title, 
    film.rating, 
    film.rental_rate, 
    film.replacement_cost
FROM inventory
	LEFT JOIN film
		ON film.film_id = inventory.film_id;


/* 
3.	From the same list of films you just pulled, please roll that data up and provide a summary level overview 
of your inventory. We would like to know how many inventory items you have with each rating at each store. 
*/

SELECT
	inventory.store_id,
	film.rating,
    COUNT(inventory.store_id) AS inventory_items
FROM inventory
	LEFT JOIN film
		ON film.film_id = inventory.film_id
GROUP BY 
	inventory.store_id, 
  film.rating;


/* 
4. Similarly, we want to understand how diversified the inventory is in terms of replacement cost. We want to 
see how big of a hit it would be if a certain category of film became unpopular at a certain store.
We would like to see the number of films, as well as the average replacement cost, and total replacement cost, 
sliced by store and film category. 
*/ 

SELECT
	inventory.store_id,
	category.name,
    ROUND(AVG(film.replacement_cost),2) AS average_replacement_cost, 
    ROUND(SUM(film.replacement_cost),2) AS total_replacement_cost
FROM inventory
	LEFT JOIN film_category
		ON inventory.film_id = film_category.film_id
	LEFT JOIN category 
		ON film_category.category_id = category.category_id
	LEFT JOIN film
		ON film_category.film_id = film.film_id
GROUP BY 
	inventory.store_id,
	category.name;
	

/*
5.	We want to make sure you folks have a good handle on who your customers are. Please provide a list 
of all customer names, which store they go to, whether or not they are currently active, 
and their full addresses – street address, city, and country. 
*/


SELECT
	  customer.first_name,
    customer.last_name, 
    customer.store_id, 
    customer.active, 
    address.address, 
    city.city, 
    country.country
FROM customer
	LEFT JOIN address 
		ON address.address_id = customer.address_id
	LEFT JOIN city
		ON city.city_id = address.city_id
	LEFT JOIN country
		ON  city.country_id = country.country_id;



/*
6.	We would like to understand how much your customers are spending with you, and also to know 
who your most valuable customers are. Please pull together a list of customer names, their total 
lifetime rentals, and the sum of all payments you have collected from them. It would be great to 
see this ordered on total lifetime value, with the most valuable customers at the top of the list. 
*/


SELECT 
	  customer.first_name, 
    customer.last_name, 
    COUNT(rental.rental_id) AS total_rentals, 
    SUM(payment.amount) AS total_amount_paid
FROM customer
	LEFT JOIN rental
		ON customer.customer_id = rental.customer_id
	LEFT JOIN payment
		on rental.rental_id = payment.rental_id
GROUP BY 
	customer.customer_id
ORDER BY 
	total_amount_paid DESC;

    
/*
7. My partner and I would like to get to know your board of advisors and any current investors.
Could you please provide a list of advisor and investor names in one table? 
Could you please note whether they are an investor or an advisor, and for the investors, 
it would be good to include which company they work with. 
*/

SELECT
	  'investor' AS type,
	  investor.first_name,
    investor.last_name,
    investor.company_name
FROM investor

UNION

SELECT 
	  'advisor' AS type,
	  advisor.first_name, 
    advisor.last_name,
    NULL
FROM advisor;
